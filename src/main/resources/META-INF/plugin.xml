<idea-plugin>
    <id>org.javamaster.HttpRequest</id>
    <name>HttpRequest</name>
    <vendor email="375709770@qq.com" url="https://www.zhihu.com/people/liang-yu-dong-44">jufeng98</vendor>

    <description>
        <![CDATA[
            Provides the ability to edit and execute HTTP requests from the code editor of IDEA.<br>
            <ul>
                <li>Support sending GET, POST and other requests</li>
                <li>Support sending WebSocket request</li>
                <li>Support sending Dubbo request</li>
                <li>Support Environment, build-in variable and build-in method</li>
                <li>Support jump to SpringMVC Controller method from url</li>
                <li>Show SpringMVC Controller method information when hover in url</li>
                <li>Support jump to SpringMVC Controller method bean field from json property</li>
                <li>Show SpringMVC Controller method bean field information when hover in json key</li>
                <li>
                    Support JavaScript previous handler, post handler and global handler(JavaScript syntax highlighting
                    depends on WebCalm plugin. After install WebCalm, please restart IDEA, Otherwise JavaScript syntax
                    highlighting will not work.)
                </li>
                <li>Support reading file content as http request body</li>
                <li>Support saving http response body to file</li>
                <li>When the response Content-Type is image type, it supports direct preview of the corresponding image</li>
                <li>Support preview HTML response</li>
                <li>Support preview pdf response</li>
                <li>Support searching SpringMVC Api in the SearchEverywhere Dialog</li>
                <li>Support Mock Server</li>
            </ul>
            Getting Started:<br>
            <ol>
                <li>Create a file with an HTTP suffix</li>
                <li>Type gtr or ptr to trigger live templates and quickly create HTTP requests</li>
                <li>Click the run button on the left side of the editor to sending request and view the response</li>
            </ol>
            提供从 IDEA Editor 编写和执行 HTTP 请求的能力：<br>
            <ul>
                <li>支持发起 GET、POST 等请求</li>
                <li>支持发起 WebSocket 请求</li>
                <li>支持发起 Dubbo 请求</li>
                <li>支持环境变量、内置变量和内置方法</li>
                <li>支持从 url 跳转到对应的 SpringMVC Controller 方法</li>
                <li>url 悬浮提示对应的 SpringMVC Controller 方法信息</li>
                <li>支持从 json 属性跳转到对应的 SpringMVC Controller 方法的出入参 Bean 字段</li>
                <li>json 属性悬浮提示对应的 SpringMVC Controller 方法的出入参 Bean 字段信息</li>
                <li>
                    支持 JavaScript 语法的前置处理器、后置处理器和全局前置处理器(JavaScript 语法高亮功能依赖 WebCalm 插件.
                    在安装 WebCalm 插件后, 请重启 IDEA, 否则 js 语法高亮功能不会生效)
                </li>
                <li>支持从文件读取内容作为请求体</li>
                <li>支持保存响应到文件</li>
                <li>当响应的 Content-Type 为图片时支持直接预览响应的图片</li>
                <li>支持预览 HTML 响应</li>
                <li>支持预览 pdf 响应</li>
                <li>支持在 SearchEverywhere 窗口搜索 SpringMVC Api</li>
                <li>支持 Mock Server</li>
            </ul>
            开始使用：<br>
            <ol>
                <li>创建一个 http 后缀的文件</li>
                <li>输入 gtr 或 ptr 等触发实时模板从而快速创建 http 请求</li>
                <li>点击编辑器左侧的运行按钮发起请求并查看响应</li>
            </ol>
        ]]>
    </description>

    <change-notes>
        <![CDATA[
            <ul>
                <li><b>5.7.5</b></li>
                <ul>
                    <li>
                        调整env文件的查找逻辑:
                        从http文件所在目录逐级向上级目录查找直到项目根目录，找到env.private文件则返回 > 从http文件所在目录逐级向上级目录查找直到项目根目录，找到env文件则返回
                    </li>
                </ul>
                <li><b>5.7.1</b></li>
                <ul>
                    <li>内置方法的参数支持输入负数</li>
                    <li>路径元素支持#</li>
                    <li>bug修复及功能优化</li>
                </ul>
                <li><b>5.6.0</b></li>
                <ul>
                    <li>http 的 PATCH 和 DELETE 请求支持请求体</li>
                    <li>path路径输入智能提示</li>
                    <li>bug修复及功能优化</li>
                </ul>
                <li><b>5.5.0</b></li>
                <ul>
                    <li>新增 no-log 指令</li>
                    <li>查看可用变量窗口支持直接新增或修改变量</li>
                    <li>bug修复及功能优化</li>
                </ul>
                <li><b>5.3.0</b></li>
                <ul>
                    <li>新增格式化功能</li>
                    <li>新增 Mock Server 功能</li>
                    <li>bug修复及功能优化</li>
                </ul>
                <li><b>5.0.0</b></li>
                <ul>
                    <li>
                        Service 窗口新增垂直工具栏，包括视图设置(是否显示行号/是否默认折叠http头/修改内容类型)、软换行、滚动到顶部、
                        滚动到底部、复制请求体或响应体内容、预览 html/pdf/image 响应等功能
                    </li>
                    <li>新增查询参数跳转对应控制器入参功能</li>
                    <li>新增查询参数文档提示对应的控制器入参功能</li>
                    <li>新增查看请求历史及对比历史响应功能</li>
                    <li>新增将请求转换为 curl 功能</li>
                    <li>改进导入 curl 功能</li>
                    <li>改进响应图片直接预览功能</li>
                    <li>http头文档提示国际化</li>
                    <li>bug修复及功能优化</li>
                </ul>
                <li><b>3.9.5</b></li>
                <ul>
                    <li>完善 js 语句块的注入逻辑</li>
                    <li>新增在 js 前置处理器设置请求头方法</li>
                    <li>bug修复</li>
                </ul>
                <li><b>3.9.2</b></li>
                <ul>
                    <li>支持 2025.1版本</li>
                </ul>
                <li><b>3.9.0</b></li>
                <ul>
                    <li>新增快速创建 http 请求功能</li>
                    <li>新增从 curl 导入功能</li>
                    <li>功能优化及Bug修复</li>
                </ul>
                <li><b>3.8.0</b></li>
                <ul>
                    <li>完善 http 语法错误提示</li>
                    <li>调整二进制响应的展示逻辑</li>
                    <li>默认保存二进制响应到文件</li>
                    <li>功能优化及Bug修复</li>
                </ul>
                <li><b>3.7.0</b></li>
                <ul>
                    <li>新增全局引入 npm 库依赖功能</li>
                    <li>国际化处理</li>
                    <li>Bug修复</li>
                </ul>
                <li><b>3.6.0</b></li>
                <ul>
                    <li>新增执行文件内所有请求功能</li>
                    <li>新增全局导入 js 文件功能</li>
                    <li>新增 header name 文档提示</li>
                    <li>新增切换环境的 intention</li>
                    <li>功能优化及Bug修复</li>
                </ul>
                <li><b>3.5.0</b></li>
                <ul>
                    <li>支持变量的重命名功能</li>
                    <li>新增 find usages 功能</li>
                    <li>支持所有类型的 http 请求</li>
                    <li>新增在 Controller url 上快速创建请求功能</li>
                    <li>功能优化及Bug修复</li>
                </ul>
                <li><b>3.3.0</b></li>
                <ul>
                    <li>新增 commenter</li>
                    <li>新增 annotator</li>
                    <li>新增变量的 inspection 检查及 fixes 快速修复</li>
                    <li>新增 http url 对应的 SpringMVC Controller 方法文档悬浮提示</li>
                    <li>新增 http 出入参的 json key 对应的 SpringMVC Controller 方法字段文档悬浮提示</li>
                    <li>新增在 SearchEverywhere 窗口搜索 SpringMVC Api 功能</li>
                    <li>调整变量等的着色逻辑,提升用户体验</li>
                    <li>完善发起请求逻辑,减少UI卡顿</li>
                    <li>完善控制器跳转逻辑,减少UI卡顿</li>
                    <li>完善控制器方法字段跳转逻辑,减少UI卡顿</li>
                    <li>功能优化及Bug修复</li>
                </ul>
                <li><b>2.8.0</b></li>
                <ul>
                    <li>调整请求头的智能提示逻辑,提升用户体验</li>
                    <li>新增 js 处理器中可用的 api，如jsonPath、xPath等等</li>
                    <li>功能优化及Bug修复</li>
                </ul>
                <li><b>2.7.0</b></li>
                <ul>
                    <li>新增读取文件内容的内置方法</li>
                    <li>环境文件允许引用内置方法</li>
                    <li>新增 js require 函数路径跳转功能</li>
                    <li>重构 http 变量点击跳转逻辑</li>
                    <li>查看可用变量窗口新增展示系统属性变量和系统环境变量</li>
                    <li>功能优化及Bug修复</li>
                </ul>
                <li><b>2.6.0</b></li>
                <ul>
                    <li>内置变量支持引用系统变量,如 {{$property.java.version}}, 其中 java.version 是系统变量名</li>
                    <li>内置变量支持引用环境变量,如 {{$env.OS}}, 其中 OS 是环境变量名</li>
                    <li>变量输入时的智能提示新增系统变量和环境变量</li>
                    <li>新增 URLSearchParams js对象用于处理查询参数</li>
                    <li>允许在 js 处理器中访问系统变量和环境变量</li>
                    <li>允许在 js 后置处理器中对于响应格式为 xml 的,可以使用 w3c 的 api 以及 xPath 进行操作</li>
                    <li>
                        保存响应到文件路径允许使用变量, 如 >> {{$mvnTarget}}/res.json, 当前可用的三个变量:
                        {{$projectRoot}} 指向项目根目录,
                        {{$historyFolder}} 指向 .idea/httpClient
                        {{$mvnTarget}} 指向模块的 src/target
                    </li>
                    <li>功能优化及Bug修复</li>
                </ul>
                <li><b>2.5.1</b></li>
                <ul>
                    <li>###行调整为可选</li>
                    <li>Bug修复</li>
                </ul>
                <li><b>2.5.0</b></li>
                <ul>
                    <li>提升内置方法的输入补全体验</li>
                    <li>允许请求名称为空</li>
                    <li>指定确切最低版本</li>
                    <li>Bug修复</li>
                </ul>
                <li><b>2.2.0</b></li>
                <ul>
                    <li>默认折叠Header</li>
                    <li>Bug修复</li>
                </ul>
                <li><b>2.1.0</b></li>
                <ul>
                    <li>改进http语法错误恢复能力</li>
                    <li>支持注释指令参数</li>
                    <li>Bug修复</li>
                </ul>
                <li><b>2.0.0</b></li>
                <ul>
                    <li>重构http语法解析逻辑，采用更科学的方式</li>
                    <li>更合理的窗口布局</li>
                    <li>支持 Dubbo 请求</li>
                    <li>Bug修复</li>
                </ul>
            </ul>
        ]]>
    </change-notes>

    <depends>com.intellij.java</depends>
    <depends>com.intellij.modules.json</depends>
    <depends>com.intellij.modules.platform</depends>
    <depends optional="true" config-file="httpclient-web-calm.xml">ris58h.webcalm</depends>

    <extensions defaultExtensionNs="com.intellij">
        <postStartupActivity implementation="org.javamaster.httpclient.startup.HttpPostStartupActivity"/>

        <notificationGroup id="HttpClient.STICKY_BALLOON"
                           isLogByDefault="true"
                           displayType="STICKY_BALLOON" bundle="messages.HttpClientBundle"
                           key="notification.group.httprequest.sticky_balloon"/>

        <fileType
                name="HTTP"
                implementationClass="org.javamaster.httpclient.HttpFileType"
                fieldName="INSTANCE"
                language="http"
                extensions="http"/>
        <lang.parserDefinition
                language="http"
                implementationClass="org.javamaster.httpclient.parser.HttpParserDefinition"/>
        <lang.ast.factory language="http" implementationClass="org.javamaster.httpclient.factory.HttpASTFactory"/>
        <editorHighlighterProvider filetype="HTTP"
                                   implementationClass="org.javamaster.httpclient.highlighting.HttpHighlighterProvider"/>
        <fileBasedIndex implementation="org.javamaster.httpclient.index.HttpEnvironmentIndex"/>
        <multiHostInjector
                implementation="org.javamaster.httpclient.inject.MessageBodyInjectionContributor"/>
        <codeInsight.lineMarkerProvider language="http"
                                        implementationClass="org.javamaster.httpclient.gutter.HttpLineMarkerProvider"/>
        <psi.referenceContributor language="http"
                                  implementation="org.javamaster.httpclient.reference.HttpPsiReferenceContributor"/>
        <psi.referenceContributor language="TEXT"
                                  implementation="org.javamaster.httpclient.reference.TextPsiReferenceContributor"/>
        <psi.referenceContributor language="XML"
                                  implementation="org.javamaster.httpclient.reference.XmlPsiReferenceContributor"/>
        <lang.elementManipulator forClass="org.javamaster.httpclient.psi.HttpFilePath"
                                 implementationClass="org.javamaster.httpclient.manipulator.HttpFilePathManipulator"/>
        <lang.elementManipulator forClass="org.javamaster.httpclient.psi.HttpVariableName"
                                 implementationClass="org.javamaster.httpclient.manipulator.HttpVariableNameManipulator"/>
        <lang.elementManipulator forClass="org.javamaster.httpclient.psi.HttpRequestTarget"
                                 implementationClass="org.javamaster.httpclient.manipulator.HttpRequestTargetManipulator"/>
        <renameHandler implementation="org.javamaster.httpclient.manipulator.HttpRenameHandler"/>
        <renamePsiElementProcessor
                implementation="org.javamaster.httpclient.manipulator.HttpRenamePsiElementProcessor"/>
        <configurationType implementation="org.javamaster.httpclient.runconfig.HttpConfigurationType"/>
        <runDashboardDefaultTypesProvider
                implementation="org.javamaster.httpclient.dashboard.HttpDashboardDefaultTypesProvider"/>
        <runDashboardCustomizer implementation="org.javamaster.httpclient.dashboard.HttpRunDashboardCustomizer"
                                id="httpRunDashboardCustomizer"/>
        <executor implementation="org.javamaster.httpclient.dashboard.HttpExecutor" order="first" id="httpExecutor"/>
        <programRunner implementation="org.javamaster.httpclient.dashboard.HttpProgramRunner"/>
<!--        <highlightErrorFilter implementation="org.javamaster.httpclient.suppress.MyHighlightErrorFilter"/>-->
<!--        <lang.inspectionSuppressor language="JSON"-->
<!--                                   implementationClass="org.javamaster.httpclient.suppress.JsonInspectionSuppressor"/>-->
        <annotator language="JSON"
                   implementationClass="org.javamaster.httpclient.annotator.TextVariableAnnotator"/>
        <annotator language="TEXT"
                   implementationClass="org.javamaster.httpclient.annotator.TextVariableAnnotator"/>
        <annotator language="XML"
                   implementationClass="org.javamaster.httpclient.annotator.TextVariableAnnotator"/>
        <annotator language="http"
                   implementationClass="org.javamaster.httpclient.annotator.HttpAnnotator"/>
        <localInspection groupKey="inspection.http.group.name" language="http"
                         shortName="HttpInspection" enabledByDefault="true" level="WARNING"
                         implementationClass="org.javamaster.httpclient.inspection.HttpInspection"
                         key="inspection.http.display.name" bundle="messages.HttpClientBundle"/>
        <localInspection groupKey="inspection.http.group.name" language="JSON"
                         shortName="MyJsonInspection" enabledByDefault="true" level="WARNING"
                         implementationClass="org.javamaster.httpclient.inspection.MyJsonInspection"
                         key="inspection.http.display.name" bundle="messages.HttpClientBundle"/>
        <localInspection groupKey="inspection.http.group.name" language="TEXT"
                         shortName="MyTextInspection" enabledByDefault="true" level="WARNING"
                         implementationClass="org.javamaster.httpclient.inspection.MyTextInspection"
                         key="inspection.http.display.name" bundle="messages.HttpClientBundle"/>
<!--        <psi.referenceContributor language="JSON"-->
<!--                                  implementation="org.javamaster.httpclient.reference.JsonValuePsiReferenceContributor"/>-->
        <psi.referenceContributor language="JSON"
                                  implementation="org.javamaster.httpclient.reference.JsonKeyDubboServiceMethodFieldPsiReferenceContributor"/>
        <lang.documentationProvider language="JSON"
                                    implementationClass="org.javamaster.httpclient.doc.JsonKeyMethodFieldDocumentationProvider"/>
        <completion.contributor language="http" id="HttpCompletionContributor" order="last"
                                implementationClass="org.javamaster.httpclient.completion.HttpCompletionContributor"/>
        <typedHandler implementation="org.javamaster.httpclient.typeHandler.HttpTypedHandler"/>
        <braceMatcher filetype="http"
                      implementationClass="org.javamaster.httpclient.braceMatcher.HttpBraceMatcher"/>
        <lang.foldingBuilder language="http"
                             implementationClass="org.javamaster.httpclient.folding.HttpFoldingBuilder"/>
        <lang.psiStructureViewFactory language="http"
                                      implementationClass="org.javamaster.httpclient.structure.HttpRequestStructureViewFactory"/>
        <defaultLiveTemplates file="liveTemplates/request.xml"/>
        <liveTemplateContext contextId="REQUEST"
                             implementation="org.javamaster.httpclient.liveTemplates.HttpTemplateContextType"/>
        <liveTemplateContext baseContextId="REQUEST" contextId="REQUEST_RESPONSE_HANDLER_PATH"
                             implementation="org.javamaster.httpclient.liveTemplates.HttpJsHandlerTemplateContextType"/>
        <liveTemplateContext contextId="HTTP_CLIENT_ENVIRONMENT_INSIDE_ENVIRONMENT"
                             implementation="org.javamaster.httpclient.liveTemplates.HttpEnvFileTemplateContextType"/>
        <multiHostInjector
                implementation="org.javamaster.httpclient.inject.ScriptBodyInjectionBackupContributor"/>
        <lang.commenter language="http" implementationClass="org.javamaster.httpclient.commenter.HttpCommenter"/>
        <gotoDeclarationHandler id="JsStringPathGotoDeclarationHandler"
                                implementation="org.javamaster.httpclient.reference.JsStringPathGotoDeclarationHandler"/>
        <psi.referenceContributor language="http"
                                  implementation="org.javamaster.httpclient.reference.HttpUrlControllerMethodPsiReferenceContributor"/>
        <psi.referenceContributor language="JSON"
                                  implementation="org.javamaster.httpclient.reference.JsonKeyControllerMethodFieldPsiReferenceContributor"/>
        <lang.documentationProvider language="http"
                                    implementationClass="org.javamaster.httpclient.doc.HttpUrlControllerMethodDocumentationProvider"/>
        <lang.documentationProvider language="http"
                                    implementationClass="org.javamaster.httpclient.doc.HttpHeadersDocumentationProvider"/>
        <lang.documentationProvider language="http"
                                    implementationClass="org.javamaster.httpclient.doc.HttpDocumentationProvider"/>
        <lang.documentationProvider language="JSON"
                                    implementationClass="org.javamaster.httpclient.doc.HttpDocumentationProvider"/>
        <lang.documentationProvider language="TEXT"
                                    implementationClass="org.javamaster.httpclient.doc.HttpDocumentationProvider"/>
        <psi.treeChangePreprocessor
                implementation="org.javamaster.httpclient.scan.support.ControllerPsiTreeChangePreprocessor"/>
        <searchEverywhereContributor implementation="org.javamaster.httpclient.symbol.ApisGotoSEContributor$Factory"/>
        <lang.findUsagesProvider language="http"
                                 implementationClass="org.javamaster.httpclient.usage.HttpFindUsagesProvider"/>
        <codeInsight.declarativeInlayProvider language="JAVA"
                                              implementationClass="org.javamaster.httpclient.inlay.UrlInlineHintsProvider"
                                              isEnabledByDefault="true"
                                              group="URL_PATH_GROUP"
                                              providerId="http.client.url"
                                              bundle="messages.HttpClientBundle"
                                              nameKey="url.name"
                                              descriptionKey="url.description"/>
        <codeInsight.inlayActionHandler handlerId="HttpInlayHintsCollector"
                                        implementationClass="org.javamaster.httpclient.inlay.HttpInlayActionHandler"/>
        <scratch.creationHelper language="http"
                                implementationClass="org.javamaster.httpclient.scratch.HttpRequestScratchFileCreationHelper"/>
        <fileEditorProvider implementation="org.javamaster.httpclient.provider.HtmlFileEditorProvider"/>
        <copyPastePreProcessor implementation="org.javamaster.httpclient.copyPaste.CurlCopyPastePreProcessor"/>
        <lang.formatter language="http"
                        implementationClass="org.javamaster.httpclient.formatter.HttpFormattingModelBuilder"/>
        <intentionAction>
            <language>http</language>
            <className>org.javamaster.httpclient.intent.HttpSwitchEnvironmentIntention</className>
            <bundleName>messages.HttpClientBundle</bundleName>
            <categoryKey>intention.http.category.name</categoryKey>
        </intentionAction>
        <intentionAction>
            <language>http</language>
            <className>org.javamaster.httpclient.intent.ConvertToCurlAndCpIntention</className>
            <bundleName>messages.HttpClientBundle</bundleName>
            <categoryKey>intention.http.category.name</categoryKey>
        </intentionAction>
    </extensions>

    <actions>
        <action class="org.javamaster.httpclient.action.ApiSearchEverywhereAction">
            <keyboard-shortcut first-keystroke="control alt SLASH" keymap="$default"/>
        </action>

        <group id="httpToolbarLeftBtnGroup">
            <action class="org.javamaster.httpclient.action.ShowAddHttpPopupAction"/>
            <action class="org.javamaster.httpclient.action.ShowRequestHistoryAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.ShowVariableFormAction"/>
            <action class="org.javamaster.httpclient.action.ConvertToCurlAndCpAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.RunAllRequestAction"/>
        </group>

        <group id="addToHttpGroup">
            <action class="org.javamaster.httpclient.action.addHttp.AddGetAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.addHttp.AddPostJsonAction"/>
            <action class="org.javamaster.httpclient.action.addHttp.AddPostParamAction"/>
            <action class="org.javamaster.httpclient.action.addHttp.AddPostMultipartTextAction"/>
            <action class="org.javamaster.httpclient.action.addHttp.AddPostMultipartFileAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.addHttp.AddWsAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.addHttp.AddDubboAction"/>
            <action class="org.javamaster.httpclient.action.addHttp.AddDubboNameAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.addHttp.ImportCurlAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.addHttp.AddEnvFileAction"/>
            <action class="org.javamaster.httpclient.action.addHttp.AddEnvPrivateFileAction"/>
        </group>

        <group id="httpToolbarRightBtnGroup">
            <action class="org.javamaster.httpclient.action.ShowExamplePopupAction"/>
        </group>

        <group id="exampleHttpGroup">
            <action class="org.javamaster.httpclient.action.example.GetExampleAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.example.PostExampleAction"/>
            <action class="org.javamaster.httpclient.action.example.PresentationAction"/>
            <action class="org.javamaster.httpclient.action.example.ScriptExampleAction"/>
            <action class="org.javamaster.httpclient.action.example.AuthExampleAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.example.WsExampleAction"/>
            <action class="org.javamaster.httpclient.action.example.DubboExampleAction"/>
            <action class="org.javamaster.httpclient.action.example.MockServerExampleAction"/>
            <separator/>
            <action class="org.javamaster.httpclient.action.example.CryptoJsExampleAction"/>
        </group>

        <group id="httpDashboardVerticalGroup">
            <action class="org.javamaster.httpclient.action.dashboard.ScrollToTopAction"/>
            <action class="org.javamaster.httpclient.action.dashboard.ScrollToEndAction"/>
            <action class="org.javamaster.httpclient.action.dashboard.CopyReqResBodyAction"/>
        </group>
    </actions>

</idea-plugin>